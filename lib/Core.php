<?phpclass Core  extends XMLParser{    public static $__area   = '';    public $__action = '';    public $__module = '';    public $__appParams  = array();    public $__resultData = array();    public $configXml      = false;    public $localXml       = false;    public $layoutXml      = false;    public $dbDisabled     = true;    public $dbTablePrefix = '';    public static $configData    = array();    public function setData($var, $val, $variable = '')    {        if ($variable != '') {            $this->__resultData[$variable][$var] = $val;        } else {            $this->__resultData[$var] = $val;        }    }    public function getData($var, $variable = '')    {        if ($variable != '') {            return isset($this->__resultData[$variable][$var]) ? $this->__resultData[$variable][$var] : false;        } else {            return isset($this->__resultData[$var]) ? $this->__resultData[$var] : false;        }    }    public static function getParamsByType($type = 'get')    {        if ($type == 'post') {            return $_POST;        }        return $_GET;    }    public function getParams()    {        if (isset($this->__appParams['params'])) {            return $this->__appParams['params'];        }        return array();    }    public function getParam($param)    {        if (isset($this->__appParams['params'][$param])) {            return $this->__appParams['params'][$param];        }        return false;    }    public function setParam($param, $val = null)    {        if ($val == null && isset($this->__appParams[$param])) {            unset($this->__appParams[$param]);        } else {            $this->__appParams[$param] = $val;        }    }    public static function getSession($sessionParam)    {        if (isset($_SESSION[$sessionParam])) {            return $_SESSION[$sessionParam];        }        return false;    }    public static function setSession($sessionParam, $val = null)    {        if ($val == null && isset($_SESSION[$sessionParam])) {            unset($_SESSION[$sessionParam]);        } else {            $_SESSION[$sessionParam] = $val;        }    }    public static function resetApp()    {        unset($_SESSION);    }    public static function getUrl($params = array())    {        $url = self::getBaseUrl();        if ($params && count($params)) {            foreach ($params as $key => $val) {                $url .= $key . "/" . $val . "/";            }        }        return $url;    }    public static function getBaseUrl()    {        $xmlObj = new XMLParser();        if (self::$__area == $xmlObj->getConfig('default/adminhtml/area')) {            return _BASEURL . parent::$adminRoutePath . "/";        }        return _BASEURL;    }    public static function getMediaUrl()    {        return _BASEURL . "media/";    }    public static function getSkinUrl()    {        return _BASEURL . self::$skinPath;    }    public static function printAppFilesStack()    {        global $appStartTime;        echo "<br/><br/><br/><br/><br/>";        $units = array('b', 'kb', 'mb', 'gb', 'tb', 'pb');        $memoryUsed = memory_get_usage();        debug("Memory usage: " . $memoryUsed . " bits, " . @round($memoryUsed / pow(1024,                        ($i = floor(log($memoryUsed, 1024)))                    ),                                                                  2                ) . ' ' . $units[$i]        );        // debug("Execution Order");        // debug(array_reverse(debug_backtrace()));        debug("Included files");        debug(get_included_files());        $time = microtime(true) - $appStartTime;        debug("Page generation time: " . $time . " seconds");    }    public static function log($msg, $filename = 'exception')    {        $currentTime = @date('Y-m-d H:i:s');        $path = _BASEDIR . "var/" . $filename;        error_log($currentTime . ": " . $msg . "\n", 3, $path);    }}