<?php/** * SLIM_MVC_Framework * * @category  controllers * @package   SLIM_MVC_Framework * @copyright Copyright (c) 2014 (http://www.elamurugan.com/) * @author    Ela <nelamurugan@gmail.com> *//** * Class SLIM_MVC_Framework * * @category    controllers * @package     SLIM_MVC_Framework */class Layout extends App{    public function getTheme()    {        return Config::$__theme;    }    public function addHandle($handle)    {        Config::$handles[] = $handle;    }    public function resetHandles()    {        Config::$handles = array();;    }    public function getHandles()    {        return Config::$handles;    }    public function setTemplate($name, $value)    {        Config::$templates[$name]['template'] = $value;    }    public function updateTemplate($name, $value)    {        Config::$templateUpdates[$name]['template'] = $value;    }    public function addItem($obj)    {        $function = "add" . ucfirst((string)$obj->addItem);        self::$function((string)$obj->file);    }    public function setPageTitle($pageTitle)    {        $this->setData('page_title', $pageTitle, 'config');    }    public function setPageMetaKeywords($siteMetaKeywords)    {        $this->setData('site_meta_keywords', $siteMetaKeywords, 'config');    }    public function setPageMetaDescription($siteMetaDescription)    {        $this->setData('site_meta_description', $siteMetaDescription, 'config');    }    public function getPageTitle()    {        $pageTitle = $this->getData('page_title', 'config') . " - " . Config::$siteTitle;        return $pageTitle;    }    public function getPageMetaKeywords()    {        $siteMetaKeywords = $this->getData('site_meta_keywords','config');        return $siteMetaKeywords;    }    public function getPageMetaDescription()    {        $siteMetaDescription = $this->getData('site_meta_description','config');        return $siteMetaDescription;    }    public function setBodyClass($cssClass)    {        Config::$bodyClasses[] = $cssClass;    }    public function getBodyClass()    {        return $this->getData('body_class', 'config') . " " . implode(" ", Config::$bodyClasses);    }    public static function addJs($jsFile)    {        Config::$_jsFiles[] = $jsFile;    }    public static function addCss($cssFile)    {        Config::$_cssFiles[] = $cssFile;    }}